services:

  customer_db:
    image: postgres:16.2
    restart: always
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: default
      POSTGRES_DB: customer-service-db
    ports:
      - "5433:5432"
    networks:
      - host

  customer_db_migration:
    image: customer-service-db-migration-app:latest
    container_name: customer-service-db-migration-service
    build:
      context: ./customer/customer-service-db-migration
      dockerfile: Dockerfile
    ports:
      - "7005:7005"
    depends_on:
      - customer_db
    environment:
      - DB_SERVICE_URL=jdbc:postgresql://customer_db:5432/customer-service-db
      - DB_SERVICE_USERNAME=default
      - DB_SERVICE_PASSWORD=default
    networks:
      - host

  customer-service:
    image: customer-service-api:latest
    container_name: customer-svc
    build:
      context: ./customer/customer-service
      dockerfile: Dockerfile
    ports:
      - "5007:5007"
    networks:
      - host

  consumption_db:
    image: postgres:16.2
    restart: always
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: default
      POSTGRES_DB: consumption-service-db
    ports:
      - "5434:5432"
    networks:
      - host

  consumption_db_migration:
    image: consumption-service-db-migration-app:latest
    container_name: consumption-service-db-migration-service
    build:
      context: ./consumption/consumption-service-db-migration
      dockerfile: Dockerfile
    ports:
      - "7006:7006"
    depends_on:
      - consumption_db
    environment:
      - DB_SERVICE_URL=jdbc:postgresql://consumption_db:5432/consumption-service-db
      - DB_SERVICE_USERNAME=default
      - DB_SERVICE_PASSWORD=default
    networks:
      - host

  elering-adapter:
    image: elering-adapter-api:latest
    container_name: elering-adapter-service
    build:
      context: ./elering-adapter
      dockerfile: Dockerfile
    ports:
      - "5005:5005"
    environment:
      - ELERING_API_URL=https://estfeed.elering.ee/
    networks:
      - host

  eureka-server:
    image: eureka-server:latest
    container_name: eureka-server-app
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_APPLICATION_NAME=eureka-server
      - EUREKA_INSTANCE_HOSTNAME=localhost
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - SERVER_PORT=8761
    depends_on:
      eureka-server:
        condition: service_started
    networks:
      - host

  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway-app
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - SPRING_APPLICATION_NAME=api-gateway
      - EUREKA_SERVICE_URL=http://eureka-server:8761/eureka/
    networks:
      - host

  authentication-service:
    image: authentication-service:latest
    container_name: authentication-service-app
    build:
      context: ./authentication-service
      dockerfile: Dockerfile
    ports:
      - "2000:2000"
    environment:
      - server.port=2000
      - SPRING_APPLICATION_NAME=authentication-service
      - EUREKA_SERVICE_URL=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_started
    networks:
      - host

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: "energycompany@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "energycompany"
    ports:
      - "9090:80"
    volumes:
      - "./docs/pgadmin/servers.json:/pgadmin4/servers.json:ro"
    depends_on:
      - customer_db
      - consumption_db
    networks:
      - host

networks:
  host:
    driver: bridge

volumes:
  customer_db:
  consumption_db: